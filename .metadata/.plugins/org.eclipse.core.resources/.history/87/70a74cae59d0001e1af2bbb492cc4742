package org.kh.site2;
// 대입 연산자 : 연산 후에 대입하는 연산자 : +=, -=, *=, /=, %=, &=, |=, >>=, <<=, >>>=, ^= 
public class Operation7 {

	public static void main(String[] args) {

		int a = 20;
		int b = 15;
		int tmp;
		a += b; // a = a + b (a = 35, b = 15)
		b -= a; // b = b - a (a = 35, b = -20)
		System.out.println("a 와 b의 값은 : " + a + "와" + b);
		// a 와 b의 값을 맞교환
		tmp = a; // c의 역할 : temp값
		a = b;
		b = tmp;
		System.out.println("a 와 b값을 서로 교환");
		System.out.println("a 와 b의 값은 : " + a + "과" + b);
		
		
		int x = 0b01101;
		int y = 0b01011;
		// 2진수로 출력(비트 연산자 : &(and), |(or), ~(not), ^(xor), >>, >>>, <<)
		System.out.println("\nx : " + Integer.toBinaryString(x));
		System.out.println("y : " + Integer.toBinaryString(y));
		
		System.out.println("==============비트 연산자=============");
		System.out.println("\nx & y : " + Integer.toBinaryString(x & y)); // and
		System.out.println("x | y : " + Integer.toBinaryString(x | y)); //or
		System.out.println("x ^ y : " + Integer.toBinaryString(x ^ y)); // xor 입력이 서로 다를경우에만 1값이 나옴.

		System.out.println("~x" + Integer.toBinaryString(~x));
		// not
		
		System.out.println("x >> 2 : " + Integer.toBinaryString(x >> 2));
		// 오른쪽으로 두칸 밀기(나누기 원리)
		
		System.out.println("x << 2 : " + Integer.toBinaryString(x << 2));
		// 왼쪽으로 두칸 밀기 (곱셈 원리)
		
		System.out.println("==============대입 연산자=============");
			
		// 16 8 4 2 1
		int i = 25; // 11001
		int j = 30; // 11110
		i &= j; // i = i & j
		System.out.println("i &= j : " + i); // 11000 -> 24
		
		i = 25; // 11001
		i |= j; // 11110
		System.out.println("i |= j : " + i); // 11111 -> 31

		i = 25; // 11001
		i ^= j; // 11110
		System.out.println("i ^= j : " + i); // 00110 -> 31

		
	}

}
